/*
Example 1:

Input: fn = (a,b,c) => (a + b + c), calls = [[1,2,3],[2,3,6]]
Output: [{"calls":1,"value":6}]
Explanation:
const onceFn = once(fn);
onceFn(1, 2, 3); // 6
onceFn(2, 3, 6); // undefined, fn was not called
*/

type Fn = (...args: any[]) => any

function once(fn: Fn): Fn {
    let hasBeenCalled: any = false;
    let result: number[];
    return function (...args): any | undefined {
        if(!hasBeenCalled){
            result = fn(...args);
            hasBeenCalled = true;
            return result;
        }else{
            return undefined;
        }
    };
}

/**
 * let fn = (a,b,c) => (a + b + c)
 * let onceFn = once(fn)
 *
 * onceFn(1,2,3); // 6
 * onceFn(2,3,6); // returns undefined without calling fn
 */
